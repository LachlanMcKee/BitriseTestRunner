buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.0.0"
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "application"
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.5"
}

mainClassName = "io.ktor.server.netty.EngineMain"

repositories {
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
    maven { url "https://kotlin.bintray.com/kotlin-js-wrappers" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"

    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-client-json:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"

    implementation "io.ktor:ktor-client-logging:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"

    implementation "com.linkedin.dextestparser:parser:2.2.1"

    implementation "org.yaml:snakeyaml:1.26"

    implementation "net.lachlanmckee:gsonpath:4.0.0"
    kapt "net.lachlanmckee:gsonpath-compiler:4.0.0"

    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.4.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.2"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

test {
    useJUnitPlatform()
}

kapt {
    arguments {
        arg("gsonpath.incremental", "true")
    }
}

shadowJar {
    manifest {
        attributes "Main-Class": mainClassName
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]
}
compileTestKotlin {
    kotlinOptions.freeCompilerArgs = ["-Xallow-result-return-type"]
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
}
